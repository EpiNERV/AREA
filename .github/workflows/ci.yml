name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-docker-compose:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [dev, prod]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2


      - name: Copy .env file
        run: |
          cp .env.example ./.env

      - name: Set up Docker Compose
      - uses: hoverkraft-tech/compose-action@v2.0.1
          with:
            compose-file: |
              "./docker-compose.yml"
              "./docker-compose.${{ matrix.environment }}.yml"

      - name: Wait for services to initialize (Dev or Prod)
        run: sleep 10

      - name: Run health check (Dev or Prod)
        run: |
          # Example: Replace with your actual health check, e.g., curl to a service or check logs
          curl -f http://localhost:8080 || exit 1
          curl -f http://localhost:8081 || exit 1

  backend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Change directory to backend
        run: cd backend

      - name: Install dependencies
        run: npm install
        working-directory: backend

      - name: Run backend tests
        run: npm run test
        working-directory: backend

      - name: Upload Jest test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jest-results
          path: backend/jest-results.xml

      - name: Upload coverage report
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: backend/coverage/lcov.info

  analyze:
    name: Analyze with SonarQube
    runs-on: ubuntu-latest
    needs: backend-tests
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: jest-results
          path: backend/
      
      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: backend/coverage/

      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
